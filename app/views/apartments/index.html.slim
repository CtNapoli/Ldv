#apartments
    #apartments-map
        #preload
            - if @apartments.any?
                - @apartments.each do |a|
                    .apartment data-lat="#{a.lat}" data-lng="#{a.lng}" data-name="#{a.name}" data-image="#{a.main_image.attached? ? rails_blob_url(a.main_image) : asset_path('apartments/default-apartment.jpg')}" data-capacity="#{t('apartment.capacity', count: a.capacity)}" data-bedrooms="#{t('apartment.bedrooms', count: a.bedrooms)}" data-rooms="#{t('apartment.rooms', count: a.rooms)}" data-toilette="#{t('apartment.toilette', count: a.toilette)}" data-minimumprice="#{price(a.prices.minimum(:value))}" data-minimumpricestring="#{t('apartment.price')}" data-defaultprice="#{price(a.price_default)}" data-link=apartment_path(a)

        #map

    .container
        .row
            .col-xl-9.list
                - if @apartments.any?
                    = render @apartments
                - else
                    p = t('messages.apartments.no-found')

            .col-xl-3
                #apartments-form.search-form.custom-card.desktop
                    .form-apartment-desktop-container
                        .search-form-container
                            = form_with url: apartments_path, method: :get, local: true do |f|
                                .form-group
                                    label.tag = t('search_form.where')
                                    #area_dropdown.dropdown
                                        - unless @where.zero?
                                            = f.hidden_field :where, value: @where, class: 'form-control'
                                        - else
                                            = f.hidden_field :where, class: 'form-control'

                                        #area.dropdown-button data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                                            - unless @where.zero?
                                                span = Area.find_by_id(@where)&.name
                                            - else 
                                                span = t('search_form.select')

                                            .icon = image_tag 'dropdown-arrow.png'
                                            
                                        .dropdown-menu aria-labelledby="area"
                                            - @areas.each do |a|
                                                .dropdown-item data-value="#{a.id}" = a.name

                                .form-group
                                    label.tag = t('search_form.dates')
                                    = f.hidden_field :start, class: 'form-control', 'v-model': 'range.start' 
                                    = f.hidden_field :end, class: 'form-control', 'v-model': 'range.end'

                                    .from_to
                                        .row.align-items-center
                                            .col-3
                                                p.small-text = t('search_form.from')
                                            
                                            .col-9.text-right
                                                span.secondary-font.font-italic
                                                    - if @start.nil?
                                                        | {{range.start | formatDate}}
                                                    - else                                                        
                                                        = @start.strftime('%d-%m-%Y')

                                        .row.align-items-center
                                            .col-3
                                                p.small-text = t('search_form.to')

                                            .col-9.text-right
                                                span.secondary-font.font-italic
                                                    - if @end.nil?
                                                        | {{range.end | formatDate}}
                                                    - else 
                                                        = @end.strftime('%d-%m-%Y')

                                        //v-date-picker mode='range' :min-date='new Date()' :disabled-dates="disabledDates" v-model='selectedDate'
                                        //v-date-picker mode='range' :min-date='new Date()' v-model='selectedDate'
                                        template
                                            |  <form class="bg-white shadow-md rounded px-8 pt-6 pb-8" @submit.prevent> 
                                            .mb-4
                                                span.block.text-gray-600.text-sm.text-left.font-bold.mb-2
                                                | Select Range
                                                v-date-picker[v-model="range" mode="date" :min-date='new Date()' :masks="masks" is-range]
                                                template[v-slot="{ inputValue, inputEvents, isDragging }"]
                                                    .flex.flex-col.sm:flex-row.justify-start.items-center
                                                        .relative.flex-grow
                                                            svg.text-gray-600.w-4.h-full.mx-2.absolute.pointer-events-none[fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewbox="0 0 24 24" stroke="currentColor"]
                                                            path[d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"]
                                                            input.flex-grow.pl-8.pr-2.py-1.bg-gray-100.border.rounded.w-full[:class="isDragging ? 'text-gray-600' : 'text-gray-900'" :value="inputValue.start" v-on="inputEvents.start"]
                                                        span.flex-shrink-0.m-2
                                                            svg.w-4.h-4.stroke-current.text-gray-600[viewbox="0 0 24 24"]
                                                            path[stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"]
                                                        .relative.flex-grow
                                                            svg.text-gray-600.w-4.h-full.mx-2.absolute.pointer-events-none[fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewbox="0 0 24 24" stroke="currentColor"]
                                                            path[d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"]
                                                            input.flex-grow.pl-8.pr-2.py-1.bg-gray-100.border.rounded.w-full[:class="isDragging ? 'text-gray-600' : 'text-gray-900'" :value="inputValue.end" v-on="inputEvents.end"]

                                

                                .form-group.no-border.no-margin
                                    label.tag = t('search_form.guests')
                                    #guests_dropdown.dropdown
                                        - unless @guests.zero?
                                            = f.hidden_field :guests, value: @guests, class: 'form-control'
                                        - else
                                            = f.hidden_field :guests, class: 'form-control'

                                        #guests.dropdown-button data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                                            - unless @guests.zero?
                                                span = t('apartment.capacity', count: @guests)
                                            - else
                                                span = t('search_form.select')
                                            .icon = image_tag 'dropdown-arrow.png'
                                            
                                        .dropdown-menu aria-labelledby="guests"
                                            - @max_guests&.times do |a|
                                                .dropdown-item data-value="#{a+1}" = t('apartment.capacity', count: a+1)

                                = f.submit t('search_form.check_availability'), class: 'btn btn-primary full', 'v-bind:class': "{ activated: submittable == true }"


    #map-and-filters-mobile
        .filters-icon.icon-container
            .icon = image_tag 'filters-mobile.png', alt: 'Filters'
            .text = t('mobile_buttons.filters')

        .map-icon.icon-container
            .icon = image_tag 'map-mobile.png', alt: 'Map'
            //.text = t('mobile_buttons.map')


    .mobile-modal
        = image_tag 'close-modal.png', alt: 'Close', class: 'close-modal'
        .form-apartment-mobile-container

            .map-container



