#apartments
    .container
        .row
            .col-12 
                .text-for-offer
                    h1 = t('messages.apartments.in-offer')
            .col-xl-9.list
                - if @apartments.any?
                    - # Aggiungi i tag <link> per pre-caricare le immagini di background
                    - @apartments.each do |apartment|
                        - if apartment.main_image.attached?
                            - content_for :head do
                                link rel="preload" href="#{rails_blob_url(apartment.main_image)}" as="image"
                                          
                    - @apartments.each do |apartment|
                        = link_to apartment_path(apartment), class: 'apartment custom-card' do
                            .box-image
                                - if apartment.main_image.attached?
                                    .image style="background-image: url('#{rails_blob_url(apartment.main_image)}')"
                                - else
                                    .image style="background-image: url('#{asset_path('apartments/default-apartment.jpg')}')"
                            
                            .info
                                h3.name.secondary-font.font-italic.text-medium = apartment.name
                                p.address.small-text = full_address(apartment.address, apartment.city, apartment.postal_code, apartment.province)

                                .features
                                    .feature
                                        span.normal-text = t('apartment.capacity', count: apartment.capacity)

                                    .dot-separator

                                    .feature
                                        span.normal-text = t('apartment.rooms', count: apartment.rooms)

                                    .dot-separator

                                    .feature
                                        span.normal-text = t('apartment.bedrooms', count: apartment.bedrooms)

                                    .dot-separator

                                    .feature
                                        span.normal-text = t('apartment.toilette', count: apartment.toilette)

                                - apartment.prices.map do |p| 
                                    - unless p.price_offer_start.nil?         
                                        .price.row
                                            .col-6                                              
                                                / p.secondary-font.font-italic = 'dal ' + apartment.prices.collect(&:price_offer_start)[0].strftime('%d-%m-%Y').to_s + ' al ' + apartment.prices.collect(&:price_offer_end)[0].strftime('%d-%m-%Y').to_s
                                                / p.digit.secondary-font.font-italic
                                                /     strike = price((apartment.prices.collect(&:price_offer_end)[0] - apartment.prices.collect(&:price_offer_start)[0]).to_i * apartment.price_default + (apartment.price_default * 0.1) + apartment.price_cleaning_service).to_s
                                                p.secondary-font.font-italic = t('apartment.from') + ' ' + p.price_offer_start.strftime('%d-%m-%Y').to_s + ' ' + t('apartment.to') + ' ' + p.price_offer_end.strftime('%d-%m-%Y').to_s
                                                p.digit.secondary-font.font-italic
                                                    strike = price(p.price_without_offer).to_s
                                                
                                                span.normal-text = t('apartment.no_special_price')

                                            .col-6
                                                /.d-flex
                                                    /p.secondary-font.font-italic = 'dal ' + apartment.prices.collect(&:price_offer_start)[0].strftime('%d-%m-%Y').to_s + ' al ' + apartment.prices.collect(&:price_offer_end)[0].strftime('%d-%m-%Y').to_s

                                                /p.digit.secondary-font.font-italic = price((apartment.prices.collect(&:price_offer_end)[0] - apartment.prices.collect(&:price_offer_start)[0]).to_i * apartment.prices.collect(&:price_offer_value)[0] + (apartment.prices.collect(&:price_offer_value)[0] * 0.1) + apartment.price_cleaning_service).to_s + ' *'                                                   

                                                .d-flex
                                                    p.secondary-font.font-italic = t('apartment.from') + ' ' + p.price_offer_start.strftime('%d-%m-%Y').to_s + ' ' + t('apartment.to') + ' ' + p.price_offer_end.strftime('%d-%m-%Y').to_s

                                                /p.digit.secondary-font.font-italic = price((p.price_offer_end - p.price_offer_start).to_i * p.price_offer_value).to_s + ' (*)'
                                                p.digit.secondary-font.font-italic = p.price_offer_value.to_s + ' (*)'

                                                span.normal-text = t('apartment.info_special_price')

                                                /p = apartment.prices.map{|p| {price_offer_start: p.price_offer_start, price_offer_end: p.price_offer_end, price_offer_value: p.price_offer_value} unless p.price_offer_start.nil? }                      

                - else
                    p = t('messages.apartments.no-found')

            .col-xl-3
                #apartments-form.search-form.custom-card.desktop
                    .form-apartment-desktop-container
                        .search-form-container
                            = form_with url: apartments_path, method: :get, local: true do |f|
                                .form-group
                                    label.tag = t('search_form.where')
                                    #area_dropdown.dropdown
                                        - unless @where.zero?
                                            = f.hidden_field :where, value: @where, class: 'form-control'
                                        - else
                                            = f.hidden_field :where, class: 'form-control'

                                        #area.dropdown-button data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                                            - unless @where.zero?
                                                span = Area.find_by_id(@where)&.name
                                            - else 
                                                span = t('search_form.select')

                                            .icon = image_tag 'dropdown-arrow.png'
                                            
                                        .dropdown-menu aria-labelledby="area"
                                            - @areas.each do |a|
                                                .dropdown-item data-value="#{a.id}" = a.name

                                .form-group
                                    label.tag = t('search_form.dates')
                                    = f.hidden_field :start, class: 'form-control', 'v-model': 'range.start' 
                                    = f.hidden_field :end, class: 'form-control', 'v-model': 'range.end'

                                    .from_to
                                        .row.align-items-center
                                            .col-3
                                                p.small-text = t('search_form.from')
                                            
                                            .col-9.text-right
                                                span.secondary-font.font-italic
                                                    | {{range.start | formatDate}}

                                        .row.align-items-center
                                            .col-3
                                                p.small-text = t('search_form.to')

                                            .col-9.text-right
                                                span.secondary-font.font-italic
                                                    | {{range.end | formatDate}}

                                        //v-date-picker mode='range' :min-date='new Date()' :disabled-dates="disabledDates" v-model='selectedDate'
                                        //v-date-picker mode='range' :min-date='new Date()' v-model='selectedDate'
                                        template
                                            |  <form class="bg-white shadow-md rounded px-8 pt-6 pb-8" @submit.prevent> 
                                            .mb-4
                                                span.block.text-gray-600.text-sm.text-left.font-bold.mb-2
                                                | Select Range
                                                v-date-picker[v-model="range" mode="date" :min-date='new Date()' :masks="masks" is-range]
                                                template[v-slot="{ inputValue, inputEvents, isDragging }"]
                                                    .flex.flex-col.sm:flex-row.justify-start.items-center
                                                        .relative.flex-grow
                                                            svg.text-gray-600.w-4.h-full.mx-2.absolute.pointer-events-none[fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewbox="0 0 24 24" stroke="currentColor"]
                                                            path[d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"]
                                                            input.flex-grow.pl-8.pr-2.py-1.bg-gray-100.border.rounded.w-full[:class="isDragging ? 'text-gray-600' : 'text-gray-900'" :value="inputValue.start" v-on="inputEvents.start"]
                                                        span.flex-shrink-0.m-2
                                                            svg.w-4.h-4.stroke-current.text-gray-600[viewbox="0 0 24 24"]
                                                            path[stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"]
                                                        .relative.flex-grow
                                                            svg.text-gray-600.w-4.h-full.mx-2.absolute.pointer-events-none[fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewbox="0 0 24 24" stroke="currentColor"]
                                                            path[d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"]
                                                            input.flex-grow.pl-8.pr-2.py-1.bg-gray-100.border.rounded.w-full[:class="isDragging ? 'text-gray-600' : 'text-gray-900'" :value="inputValue.end" v-on="inputEvents.end"]

                                

                                .form-group.no-border.no-margin
                                    label.tag = t('search_form.guests')
                                    #guests_dropdown.dropdown
                                        - unless @guests.zero?
                                            = f.hidden_field :guests, value: @guests, class: 'form-control'
                                        - else
                                            = f.hidden_field :guests, class: 'form-control'

                                        #guests.dropdown-button data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                                            - unless @guests.zero?
                                                span = t('apartment.capacity', count: @guests)
                                            - else
                                                span = t('search_form.select')
                                            .icon = image_tag 'dropdown-arrow.png'
                                            
                                        .dropdown-menu aria-labelledby="guests"
                                            - @max_guests&.times do |a|
                                                .dropdown-item data-value="#{a+1}" = t('apartment.capacity', count: a+1)

                                = f.submit t('search_form.check_availability'), class: 'btn btn-primary full', 'v-bind:class': "{ activated: submittable == true }"


    #map-and-filters-mobile
        .filters-icon.icon-container
            .icon = image_tag 'filters-mobile.png', alt: 'Filters'
            .text = t('mobile_buttons.filters')

        //.map-icon.icon-container
            //.icon = image_tag 'map-mobile.png', alt: 'Map'
            //.text = t('mobile_buttons.map')


    .mobile-modal
        = image_tag 'close-modal.png', alt: 'Close', class: 'close-modal'
        .form-apartment-mobile-container

            .map-container



